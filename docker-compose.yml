version: '2'

# docker rmi $(docker images -a --filter=dangling=true -q)

services:
    elasticsearch:
        build: elasticsearch/
        environment: 
            ES_JAVA_OPTS: "-Xms1g -Xmx1g"
        ports: 
            - "9200:9200"
            - "9300:9300"
        command: elasticsearch -E node.name="Elasticsearch_Connector"
        networks:
            - docker_ek
    kibana:
        build: kibana/
        ports: 
            - "5601:5601"
        networks:
            - docker_ek
        depends_on:
            - elasticsearch
    drupal:
        build: drupal/
        ports: 
            - "8080:80"
        volumes: 
            #- ./code/drupal/modules:/var/www/html/modules
            #- ./code/drupal/profiles:/var/www/html/profiles
            #- ./code/drupal/themes:/var/www/html/themes
            # this takes advantage of the feature in Docker that a new anonymous
            # volume (which is what we're creating here) will be initialized with the
            # existing content of the image at the same location
            - ./code/drupal/files:/var/www/html/sites/files
        links:
            - mysql:mysql
        networks:
            - docker_ek
        restart: always
    mysql:
        image: mariadb:10
        environment:
            MYSQL_USER: drupal
            MYSQL_PASSWORD: drupal
            MYSQL_DATABASE: drupal
            MYSQL_ROOT_PASSWORD: ''
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        ports:
            - "3306:3306"
        volumes: 
            - ./data/mysql:/var/lib/mysql
        networks:
            - docker_ek
        restart: always

networks:
    docker_ek:
        driver: bridge